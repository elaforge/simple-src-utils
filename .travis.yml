language: generic

# Explicitly request container-based infrastructure.
sudo: false

# Speed up git.
git: {depth: 3}

cache:
  directories:
    - $HOME/.cabal
    - $HOME/.ghc

before_cache:
  - rm -rf $HOME/.cabal/logs
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/0[01]-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx
  - rm -rfv $HOME/.cabal/packages/head.hackage

matrix:
  include:
    - compiler: "ghc-7.8.4"
      env: GHC=7.8.4 CABALVER=2.0
      addons:
        apt:
          packages: [ghc-7.8.4, cabal-install-2.0]
          sources: [hvr-ghc]

    - compiler: "ghc-7.10.3"
      env: GHC=7.10.3 CABALVER=2.0
      addons:
        apt:
          packages: [ghc-7.10.3, cabal-install-2.0]
          sources: [hvr-ghc]

    - compiler: "ghc-8.0.2"
      env: GHC=8.0.2 CABALVER=2.0
      addons:
        apt:
          packages: [ghc-8.0.2, cabal-install-2.0]
          sources: [hvr-ghc]

    - compiler: "ghc-8.2.2"
      env: GHC=8.2.2 CABALVER=2.0
      addons:
        apt:
          packages: [ghc-8.2.2, cabal-install-2.0]
          sources: [hvr-ghc]

    - compiler: "ghc-8.4.1"
      env: GHC=8.4.1 CABALVER=2.2
      addons:
        apt:
          packages: [ghc-8.4.1, cabal-install-2.2]
          sources: [hvr-ghc]

    - compiler: "ghc-HEAD"
      env: GHC=head CABALVER=head
      addons:
        apt:
          packages: [ghc-head, cabal-install-head]
          sources: [hvr-ghc]

install: true

before_install:
  - export PATH="/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH"
  - export PATH="$HOME/.cabal/bin:$PATH"

install:
  - ghc-pkg list
  - travis_retry cabal update -v
  - cabal install --only-dependencies --enable-tests -j2

script:
  # test that source-distributions can be generated
  - cabal sdist
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)
  - cat dist/simple-src-utils-*.tar.gz | (cd "${DISTDIR}/" && tar -xzvf -)
  - cd ${DISTDIR}/simple-src-utils-*
  # this builds all libraries and executables (without tests/benchmarks)
  - cabal configure --enable-tests --disable-benchmarks
  - cabal build
  - cabal test
